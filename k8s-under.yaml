
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    k8s.kuboard.cn/displayName: 【云上云下】云下心跳客户端（新）
  labels:
    k8s.kuboard.cn/layer: monitor
    k8s.kuboard.cn/name: wu-lazy-cloud-heartbeat-client
  name: wu-lazy-cloud-heartbeat-client
  namespace: middleground-tenant-share
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s.kuboard.cn/layer: monitor
      k8s.kuboard.cn/name: wu-lazy-cloud-heartbeat-client
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s.kuboard.cn/layer: monitor
        k8s.kuboard.cn/name: wu-lazy-cloud-heartbeat-client
    spec:
      containers:
        - envFrom:
            - configMapRef:
                name: common-cnf
          image: >-
            docker-registry.laihui.com/middleground/wu-lazy-cloud-heartbeat-client:master_latest
          imagePullPolicy: Always
          name: wu-lazy-cloud-heartbeat-client
          resources:
            limits:
              memory: 384Mi
            requests:
              memory: 384Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    k8s.kuboard.cn/displayName: 【云上云下】云下中心网关（新）
  labels:
    k8s.kuboard.cn/layer: gateway
    k8s.kuboard.cn/name: wu-lazy-cloud-central-gateway
  name: wu-lazy-cloud-central-gateway
  namespace: middleground-tenant-share
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s.kuboard.cn/layer: gateway
      k8s.kuboard.cn/name: wu-lazy-cloud-central-gateway
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s.kuboard.cn/layer: gateway
        k8s.kuboard.cn/name: wu-lazy-cloud-central-gateway
    spec:
      containers:
        - envFrom:
            - configMapRef:
                name: common-cnf
          image: >-
            docker-registry.laihui.com/middleground/wu-lazy-cloud-central-gateway:master_latest
          imagePullPolicy: Always
          name: wu-lazy-cloud-central-gateway
          resources:
            limits:
              memory: 384Mi
            requests:
              memory: 384Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    k8s.kuboard.cn/displayName: 【云上云下】云下暂存服务（新）
  labels:
    k8s.kuboard.cn/layer: svc
    k8s.kuboard.cn/name: wu-lazy-cloud-staging-provider
  name: wu-lazy-cloud-staging-provider
  namespace: middleground-tenant-share
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s.kuboard.cn/layer: svc
      k8s.kuboard.cn/name: wu-lazy-cloud-staging-provider
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s.kuboard.cn/layer: svc
        k8s.kuboard.cn/name: wu-lazy-cloud-staging-provider
    spec:
      containers:
        - envFrom:
            - configMapRef:
                name: common-cnf
          image: >-
            docker-registry.laihui.com/middleground/wu-lazy-cloud-staging-provider:master_latest
          imagePullPolicy: Always
          name: wu-lazy-cloud-staging-provider
          resources:
            limits:
              memory: 384Mi
            requests:
              memory: 384Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

